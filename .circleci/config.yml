version: 2.1
gather_facts: false
# Use a package of configuration called an orb.
commands:
   # Exercise - Rollback
   destroy_environment:
     steps:
       - run:
           name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
           command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

# Define the jobs we want to run for this project
jobs:
    create_infrastructure:
        docker:
            - image: amazon/aws-cli
        steps:
            - checkout
            - run:
                  name: Create Cloudformation Stack
                  command: |
                      aws cloudformation deploy \
                        --template-file template.yml \
                        --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                        --region us-east-1
            - run: return 1
            - destroy_environment
              when: on_fail
 
    # configure_infrastructure: 
    #   docker:
    #     - image: python:3.7-alpine3.11
    #   steps:
    #     - checkout
    #     - add_ssh_keys:
    #             # You can get this ID in the section where you registered the SSH Key ok
    #             fingerprints: ["9f:b1:24:6f:e1:d6:25:f5:35:1c:df:85:f1:06:69:4f"] 
    #     - run:
    #         name: Install Ansible
    #         command: |
    #           # Install Ansible
    #           apk add --update ansible
              
    #     - run:
    #         name: Run Playbook and Configure server
    #         command: |
    #           ansible-playbook -i inventory main-remote.yml
# Exercise: Smoke Testing
      # smoke_test:
      #   docker:
      #     - image: alpine:latest
      #   steps:
      #     - run: apk add --update curl
      #     - run:
      #         name: smoke test
      #         command: |
      #           URL="https://blog.udacity.com/"
      #           # Test if website exists
      #           if curl -s --head ${URL} 
      #           then
      #             return 0
      #           else
      #             return 1
      #           fi
    smoke_test:
        docker:
          - image: alpine:latest
        steps:
          - run:
              name: Test job
              # Fail the job intentionally to simulate an error.
              command:  return 1
          - destroy_environment
      # Exercise - Rollback
# Sequential workflow
workflows:
    # Name the workflow
    myWorkflow:
        jobs:
            - create_infrastructure
